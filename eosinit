#!/usr/bin/env variant

tasks:

  schedule:
    description: Create producers schedule JSON
    options:
    - name: from
      description: Path to the producers keys data file
      type: object
      required: true
    script: |
      cat <<EOF
      {
        "schedule": [
          {{- $producers_num := len (keys (get "from")) -}}
          {{- range $i, $name := keys (get "from") }}
          {{- $keys := index (get "from") $name }}
          {{- if ne $name "eosio" }}
          {
            "producer_name": "{{ $name }}",
            "block_signing_key": "{{ last $keys }}"
          }{{ if lt (add1 $i) $producers_num }},{{ end }}
          {{- end }}
          {{- end }}
        ]
      }
      EOF

  create:
    description: Create various types of accounts

    tasks:
      accounts:
        description: Create eos accounts
        options:
        - name: from
          description: Path to the producers keys data file
          type: object
          required: true
        - name: dryrun
          description: Set to true to print the script only
          type: boolean
          default: false
        script: |
          cat <<EOF | tee /tmp/.$$.create.accounts
          set -e

          CONTRACTS=\${CONTRACTS:-/contracts}
          EOSURL=\${EOSURL:-http://127.0.0.1:8888}

          # create wallet
          cleos -u \$EOSURL wallet create --file /tmp/wallet.txt

          # accounts creation
          {{- range $i, $e  := get "from" }}        
          cleos -u \$EOSURL wallet import --private-key {{ first $e }}
          cleos -u \$EOSURL create account eosio {{ $i }} {{ last $e }}
          {{ end }}
          EOF
          {{ if not (get "dryrun") }}bash /tmp/.$$.create.accounts{{ end }}
          rs=$?
          rm -f /tmp/.$$.create.accounts && exit $rs

      producer-accounts:
        description: Create producer accounts
        options:
        - name: from
          description: Path to the producers keys data file
          type: object
          required: true
        - name: dryrun
          description: Set to true to print the script only
          type: boolean
          default: false
        script: |
          cat <<EOF | tee /tmp/.$$.create.accounts
          set -e

          CONTRACTS=\${CONTRACTS:-/contracts}
          EOSURL=\${EOSURL:-http://127.0.0.1:8888}

          # keys substitution
          {{- range $name, $keys  := get "from" }}
          KEY_{{ $name | replace "." "" }}="{{ first $keys }}"
          PUBKEY_{{ $name | replace "." "" }}="{{ last $keys }}"
          {{- end }}

          # create wallet
          cleos -u \$EOSURL wallet create --file /tmp/wallet.txt

          # import genesis key and initialize the bios contract
          if [ -n "\$KEY_eosio" ]; then
            cleos -u \$EOSURL wallet import --private-key \$KEY_eosio
            cleos -u \$EOSURL set contract eosio \${CONTRACTS}/eosio.bios
          fi

          # create producer accounts
          for name in {{ keys (get "from") | join (" ") | replace "." "" | replace "eosio" "" }}; do
            key=\$(eval echo '$'KEY_\$name)
            pubkey=\$(eval echo '$'PUBKEY_\$name)

            cleos -u \$EOSURL wallet import --private-key \$key
            cleos -u \$EOSURL create account eosio \$name \$pubkey
          done
          EOF
          {{ if not (get "dryrun") }}bash /tmp/.$$.create.accounts{{ end }}
          rs=$?
          rm -f /tmp/.$$.create.accounts && exit $rs

  action:
    description: Varios eos actions
    tasks:
      setprods:
        description: Register producers (setprods)
        options:
        - name: schedule
          type: object
          requred: true
        - name: dryrun
          description: Set to true to print the script only
          type: boolean
        script: |
          cat <<EOF | tee /tmp/.$$.setprods.temp
          EOSURL=\${EOSURL:-http://127.0.0.1:8888}
          cleos -u \$EOSURL push action eosio setprods '{{ get "schedule" | toJson }}' -p eosio@active
          EOF
          {{ if not (get "dryrun") }}bash /tmp/.$$.setprods.temp{{ end }}
          rs=$?
          rm -f /tmp/.$$.setprods.temp && exit $rs

      regproducer:
        description: Register producers with system account
        options:
        - name: from
          description: Path to the producers keys data file
          type: object
          required: true
        - name: dryrun
          description: Set to true to print the script only
          type: boolean
          default: false

        script: |
          cat <<EOF | tee /tmp/.$$.regproducer.temp
          EOSURL=\${EOSURL:-http://127.0.0.1:8888}
          {{- range $name, $keys  := get "from" }}
          {{- if ne $name "eosio" }}
          cleos -u \$EOSURL system regproducer {{ $name }} {{ last $keys }}
          {{- end }}
          {{- end }}
          EOF
          {{ if not (get "dryrun") }}bash /tmp/.$$.regproducer.temp{{ end }}
          rs=$?
          rm -f /tmp/.$$.regproducer.temp && exit $rs

  cleanup_wallet:
    description: Cleanup keosd instance and unlink wallet
    script: |
      keosd_pid=$(ps -ao pid,comm | grep keosd | sed -r 's/ *([0-9]+).*/\1/')
      kill -TERM $keosd_pid
      rm -rf /tmp/wallet.txt ~/eosio-wallet
