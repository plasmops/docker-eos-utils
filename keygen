#!/usr/bin/env variant

tasks:
  ## Generate a key
  cleos:
    description: Generates eos key-pair(s)
    parameters:
    - name: keys
      description: Number of key-pairs to create
      type: integer
      default: 1
    - name: map
      description: Use map file for the account names
      type: object
      default: {}
    - name: field
      description: Specify the map field
      type: string
      default: "accounts"
    - name: image
      description: Specify the container image with cleos
      default: eosio/eos

    script: |
      cat <<EOF > /tmp/.$$.keygen.temp
      {{- if .map -}}
      {{- $items := index .map .field -}}
        {{- range $i, $e := $items }}
      pair=\$(cleos create key --to-console | sed 's/.*: /  - /')
      printf '"{{ $e }}": \n%s\n' "\$pair"
        {{- end }}
      {{- else -}}
      {{- $items := until (.keys) -}}
        {{- range $i, $e := $items }}
      pair=\$(cleos create key --to-console | sed 's/.*: /  - /' )
      printf '"{{ $e }}": \n%s\n' "\$pair"
        {{- end }}
      {{- end }}
      EOF
      cat /tmp/.$$.keygen.temp | docker run --rm -i {{ .image }} sh -s
      rm -f /tmp/.$$.keygen.temp


  out:
    description: Cats a keypairs yaml file
    parameters:
    - name: file
      description: Path to a keypairs yaml file
      type: string
      required: true
    script: |
      if [ -f "{{ .file }}" ]; then
        cat {{ .file }}
      else
        echo "{}"
      fi

  ## Sync a keyfile
  sync:
    description: Creates a keypair yaml file
    options:
    - name: cleos
      type: object
      required: true
    - name: out
      type: object
      required: true
    script: |
      set -e
      {{- $update := merge .cleos .out }}
      cat <<EOF > .$$-{{ .file }}-update
      {{ $update | toYaml -}}
      EOF

      if [ -f "{{ .file }}" ]; then
        ## sync changes
        diff -u {{ .file }} .$$-{{ .file }}-update || \
          cat .$$-{{ .file }}-update > {{ .file }}
      else
        ## create new keysfile
        cat .$$-{{ .file }}-update > {{ .file }}
        echo "... Created new file - {{ .file }}"
      fi

      rm -f .$$-{{ .file }}-update

  signature-providers:
    description: Form signature providers lines
    options:
    - name: from
      type: object
      required: true
    script: |
      {{- $map := get "from" -}}
      cat <<EOF
      {{- range $k, $v := $map }}
      {{ $k }}: {{ last $v }}=KEY:{{ first $v }}
      {{- end }}
      EOF

  peer-private-keys:
    description: Form peer private keys lines
    options:
    - name: from
      type: object
      required: true
    script: |
      {{- $map := get "from" -}}
      cat <<EOF
      {{- range $k, $v := $map }}
      '["{{ last $v }}","{{ first $v }}"]'
      {{- end }}
      EOF
